/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	Copyright (c) Geoworks 1995 -- All Rights Reserved

PROJECT:	
MODULE:		
FILE:		sCtrlC.goh

AUTHOR:		Edward Ballot, Aug 30, 1995

ROUTINES:
	Name			Description
	----			-----------
	SSEditBarControlClass
	SSSortControlClass
	SSChooseFuncControlClass
	SSDefineNameControlClass
	SSChooseNameControlClass
	SSColumnWidthControlClass
	SSRowHeightControlClass
	SSEditControlClass
	SSHeaderFooterControlClass
	SSBorderControlClass
	SSBorderColorControlClass
	SSRecalcControlClass
	SSOptionsControlClass
	SSNoteControlClass
	SSFillControlClass
	SSChartControlClass


REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	EB	8/30/95   	Initial version.

DESCRIPTION:
	Controllers defined by the Spreadsheet library.

	$Id: sCtrlC.goh,v 1.2 96/03/29 14:46:51 eballot Exp $

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/

#ifndef __SCTRLC
#define __SCTRLC

@include <Objects/colorC.goh>
@include <ssheet.goh>
#include <parse.h>

@deflib	ssheet

typedef struct {
/*
 * selected range
 *
 *  NOTE: this does not include the header and footer, if any
 *  NOTE: NSSDRC_range.CR_start.CR_row == -1 if there is no data
 */
    CellRange	NSSDRC_selection;
/* range of cells with data.  CellRange declared in parse.h */
    CellRange	NSSDRC_range;
} NotifySSheetDataRangeChange;

/* ******************************************************************************
 * 		SSEditBarControlClass
 * ******************************************************************************
 * 
 *  Message(s) sent out:
 *  MSG_SPREADSHEET_ENTER_DATA_WITH_EVENT
 *  MSG_SPREADSHEET_RESTORE_DATA
 *  MSG_SPREADSHEET_GOTO_CELL
 * 
 *  Notification type(s) responded to:
 *  MANUFACTURER_ID_GEOWORKS.GWNT_SPREADSHEET_EDIT_BAR_CHANGE:
 * 						NotifySSheetEditBarChange
 *  MANUFACTURER_ID_GEOWORKS.GWNT_SPREADSHEET_ACTIVE_CELL_CHANGE:
 * 						NotifySSheetActiveCellChange
 * 
 *  GenApplication GCN lists to be placed on:
 * 	GAGCNLT_SELF_LOAD_OPTIONS
 */

@class  SSEditBarControlClass, GenControlClass;

/* -----------------------------------------------------------------------------
 * 		Methods
 * -----------------------------------------------------------------------------*/

/*
 *  Handle the initial keypress to start editing text in the edit bar
 *
 * 	PASS:	same as MSG_META_KBD_CHAR:
 * 		    cl - Character		(Chars or VChar)
 * 		    ch - CharacterSet	(CS_BSW or CS_CONTROL)
 * 		    dl - CharFlags
 * 		    dh - ShiftState		(left from conversion)
 * 		    bp low - ToggleState
 * 		    bp high - scan code
 * 	RETURN:	none
 */
/* CHECKME */
@message void MSG_SSEBC_INITIAL_KEYPRESS(word charAndCharSet = cx,
					 word charFlagsAndState = dx,
					 word toggleState = bp);

/*
 *  Enter data from the edit bar
 *
 * 	PASS:	bp - event to send along with data, or zero if none.
 * 	RETURN:	none
 */
@message void MSG_SSEBC_ENTER_DATA(word event = bp);


/*
 *  Go to the specified cell
 *
 * 	PASS:	none
 * 	RETURN:	none
 */
@message void MSG_SSEBC_GOTO_CELL();


/*
 *  Enable or disable the edit icons
 * 	PASS:	cx - MSG_GEN_SET_ENABLED or MSG_GEN_SET_DISABLED
 * 	RETURN:	none
 */
@message void MSG_SSEBC_DIS_ENABLE_EDIT_ICONS(word mess = cx);


/*
 *  Pass a keypress that finished editing
 *
 * 	PASS:	same as MSG_META_KBD_CHAR:
 * 		    cl - Character		(Chars or VChar)
 * 		    ch - CharacterSet	(CS_BSW or CS_CONTROL)
 * 		    dl - CharFlags
 * 		    dh - ShiftState		(left from conversion)
 * 		    bp low - ToggleState
 * 		    bp high - scan code
 * 	RETURN:	none
 */
/* CHECKME */
@message void MSG_SSEBC_PASS_KEYPRESS(word charAndCharSet = cx,
				      word charFlagsAndState = dx,
				      word toggleState = bp);

/*
 *  Go to the specified cell (from the DB)
 *
 * 	PASS:	none
 * 	RETURN:	none
 */
@message void MSG_SSEBC_GOTO_CELL_DB();


/*
 *  Cancel changes to data made in the edit bar
 *
 * 	PASS:	none
 * 	RETURN:	none
 */
@message void MSG_SSEBC_CANCEL_DATA();


/*
 *  Get flags about the state of the edit bar
 *
 * 	PASS:	none
 * 	RETURN:	cl - SSEditBarControlFlags
 */
@message SSEditBarControlFlags MSG_SSEBC_GET_FLAGS() = cl;


/*
 *  Grab the focus
 *
 * 	PASS:	none
 * 	RETURN:	none
 */
@message void MSG_SSEBC_GRAB_FOCUS();


/*
 *  Brings up the "Goto Cell" dialog box
 *
 * 	PASS:	none
 * 	RETURN:	none
 */
@message void MSG_SSEBC_INITIATE_GOTO_CELL_DB();


/* -----------------------------------------------------------------------------
 * 		Internal methods
 * -----------------------------------------------------------------------------*/

/* -----------------------------------------------------------------------------
 * 		Hints
 * -----------------------------------------------------------------------------*/

/* -----------------------------------------------------------------------------
 * 		Constants & Structures
 * -----------------------------------------------------------------------------*/

typedef ByteFlags SSEditBarControlFlags;
/* 7 bits unused */
/* If SSEBCF_IS_FOCUS is set, then edit bar has focus */
#define SSEBCF_IS_FOCUS	(0x01)


/*
 *  Features flags (used with ATTR_GEN_CONTROL_REQUIRE_UI and
 *  ATTR_GEN_CONTROL_PROHIBIT_UI)
 */
typedef ByteFlags SSEBCFeatures;
/* 7 bits unused */
#define SSEBCF_GOTO_CELL	(0x01)


typedef WordFlags SSEBCMiscData;
/* 15 bits unused */
/* if set, the cell displayed by edit bar is protected. */
#define SSEBCMD_PROTECTION (0x01)



/*
 *  Toolbox features flags (used with ATTR_GEN_CONTROL_REQUIRE_TOOLBOX_UI and
 *  ATTR_GEN_CONTROL_PROHIBIT_TOOLBOX_UI)
 */
typedef ByteFlags SSEBCTFeatures;
/* 2 bits unused */
#define SSEBCTF_FILTER_SELECTOR		(0x20)
#define SSEBCTF_BACKSPACE_BUTTON	(0x10)
#define SSEBCTF_EDIT_BAR		(0x08)
#define SSEBCTF_EDIT_ICONS		(0x04)
#define SSEBCTF_GOTO_CELL_BUTTON	(0x02)
#define SSEBCTF_GOTO_CELL		(0x01)

#define SSEBC_DEFAULT_FEATURES	(SSEBCF_GOTO_CELL)

#define SSEBC_DEFAULT_TOOLBOX_FEATURES	\
(SSEBCTF_GOTO_CELL | SSEBCTF_EDIT_ICONS | SSEBCTF_EDIT_BAR)

/*
 *  Notification structures
 */
typedef struct {
    word	NSSEBC_selectStart;	/* start of selection */
    word	NSSEBC_selectEnd;	/* end of selection */
    word	NSSEBC_textSize;	/* length of text string */
    SSEBCMiscData NSSEBC_miscData;	/* other data needed by Editbar */
@ifdef __HIGHC__
    char	NSSEBC_text[0];		/* cell text (NULL-terminated) */
@else
    void	NSSEBC_text;		/* cell text (NULL-terminated) */
@endif
} NotifySSheetEditBarChange;


typedef struct {
    word	NSSACC_textSize;	/* length of text string for contents */
@ifdef __HIGHC__
    char	NSSACC_text[0];		/* cell text (NULL-terminated) */
@else
    void	NSSACC_text;		/* cell text (NULL-terminated) */
@endif
} NotifySSheetActiveCellChange;

/* -----------------------------------------------------------------------------
 * 		Instance Data
 * -----------------------------------------------------------------------------*/

    @default GCI_output = (TO_APP_TARGET);

@endc	/* SSEditBarControlClass */

/* ******************************************************************************
 * 		SSSortControlClass
 * ******************************************************************************
 *
 *  Message(s) sent out:
 *  MSG_SPREADSHEET_SORT_RANGE
 * 
 *  Notification type(s) responded to:
 *  MANUFACTURER_ID_GEOWORKS.GWNT_SPREADSHEET_SELECTION_CHANGE
 * 						NotifySSheetSelectionChange
 * 
 *  GenApplication GCN lists to be placed on:
 * 	GAGCNLT_SELF_LOAD_OPTIONS
 */

@class  SSSortControlClass, GenControlClass;

/* -----------------------------------------------------------------------------
 * 		Methods
 * -----------------------------------------------------------------------------*/

/* -----------------------------------------------------------------------------
 * 		Internal methods
 * -----------------------------------------------------------------------------*/

/*
 *  Begin a sort
 */
@message void MSG_SSSC_SORT();


/*
 *  Begin sort from a trigger
 * 
 *  PASS:		cl - RangeSortFlags
 */
@message void MSG_SSSC_SORT_TRIGGER(RangeSortFlags flags = cl);

/* -----------------------------------------------------------------------------
 * 		Hints
 * -----------------------------------------------------------------------------*/

/* -----------------------------------------------------------------------------
 * 		Constants & Structures
 * -----------------------------------------------------------------------------*/

/*
 *  Features flags (used with ATTR_GEN_CONTROL_REQUIRE_UI and
 *  ATTR_GEN_CONTROL_PROHIBIT_UI)
 */


typedef ByteFlags SSSCFeatures;
/* 5 bits unused */
#define SSSCF_SORT_BY		(0x04)
#define SSSCF_SORT_ORDER	(0x02)
#define SSSCF_SORT_OPTIONS	(0x01)

/*
 *  Toolbox features flags (used with ATTR_GEN_CONTROL_REQUIRE_TOOLBOX_UI and
 *  ATTR_GEN_CONTROL_PROHIBIT_TOOLBOX_UI)
 */

typedef ByteFlags SSSCTFeatures;
/* 6 bits unused */
#define SSSCTF_SORT_DESCENDING	(0x02)
#define SSSCTF_SORT_ASCENDING	(0x01)


#define SSSC_DEFAULT_FEATURES	\
(SSSCF_SORT_BY | SSSCF_SORT_ORDER | SSSCF_SORT_OPTIONS)

#define SSSC_DEFAULT_TOOLBOX_FEATURES	\
(SSSCTF_SORT_ASCENDING | SSSCTF_SORT_DESCENDING)

/*
 *  Notification structures
 */
typedef WordFlags SSheetSelectionFlags;
/* 11 bits unused */
/* SSSF_ENTIRE_ROW = entire row selected */
#define SSSF_ENTIRE_ROW		(0x0010)
/* SSSF_ENTIRE_COLUMN = entire column selected */
#define SSSF_ENTIRE_COLUMN	(0x0008)
/* SSSF_SINGLE_CELL = single cell selected */
#define SSSF_SINGLE_CELL	(0x0004)
/* SSSF_SINGLE_ROW = single row selected */
#define SSSF_SINGLE_ROW		(0x0002)
/* SSSF_SINGLE_COLUMN = single column selected */
#define SSSF_SINGLE_COLUMN	(0x0001)

typedef struct {
/* range of selection */
    CellRange			NSSSC_selection;
    SSheetSelectionFlags	NSSSC_flags;
} NotifySSheetSelectionChange;

/* -----------------------------------------------------------------------------
 * 		Instance Data
 * -----------------------------------------------------------------------------*/

    @default GCI_output = (TO_APP_TARGET);

@endc	/* SSSortControlClass */

/* ******************************************************************************
 * 		SSChooseFuncControlClass
 * ******************************************************************************
 * 
 *  Message(s) sent out:
 * 
 *  Notification type(s) responded to:
 */

@class  SSChooseFuncControlClass, GenControlClass;

/* -----------------------------------------------------------------------------
 * 		Methods
 * -----------------------------------------------------------------------------*/

/* -----------------------------------------------------------------------------
 * 		Internal methods
 * -----------------------------------------------------------------------------*/

@message void MSG_SSCF_CHOOSE_FUNCTION();

/*
 * PASS:	cx:dx GenDynamicList OD
 *		bp - entry #
 * RETURN:		
 */
@message void MSG_SSCF_REQUEST_FUNCTION_MONIKER(optr genDynamicList = cx:dx,
						word entryNum = bp);

/*
 *  Change the type of function display
 * 
 *  PASS:		cx - FunctionType to display
 */
@message void MSG_SSCF_CHANGE_TYPE(FunctionType functionType = cx);


/*
 *  Change the function that is selected
 * 
 *  PASS:		cx - index of function in list
 */
@message void MSG_SSCF_CHANGE_FUNCTION(word func = cx);

/* -----------------------------------------------------------------------------
 * 		Hints
 * -----------------------------------------------------------------------------*/

/* -----------------------------------------------------------------------------
 * 		Constants & Structures
 * -----------------------------------------------------------------------------*/

typedef ByteFlags SSCFFeatures;
/* 3 bits unused */
/* SSCFF_DESCRIPTION = show description of function */
#define SSCFF_DESCRIPTION	(0x10)
/* SSCFF_ARGUMENT_LIST = show description of arguments */
#define SSCFF_ARGUMENT_LIST	(0x08)
/* SSCFF_PASTE_ARGUMENTS = give paste arguments option */
#define SSCFF_PASTE_ARGUMENTS	(0x04)
/* SSCFF_FUNCTION_TYPE = give list of function types */
#define SSCFF_FUNCTION_TYPE	(0x02)
/* SSCFF_CHOOSE	= the basics, mon */
#define SSCFF_CHOOSE		(0x01)

/* -----------------------------------------------------------------------------
 * 		Constants & Structures
 * -----------------------------------------------------------------------------*/



#define SSCF_DEFAULT_FEATURES	\
(SSCFF_CHOOSE | SSCFF_FUNCTION_TYPE | SSCFF_PASTE_ARGUMENTS | SSCFF_DESCRIPTION | SSCFF_ARGUMENT_LIST)

/* -----------------------------------------------------------------------------
 * 		Instance Data
 * -----------------------------------------------------------------------------*/

    @instance FunctionType SSCFCI_types = (FT_ALL);
    @default GCI_output = (TO_APP_TARGET);

@endc	/* SSChooseFuncControlClass */

/* ******************************************************************************
 * 		SSDefineNameControlClass
 * ******************************************************************************
 * 
 *  Message(s) sent out:
 * 
 *  Notification type(s) responded to:
 */

@class  SSDefineNameControlClass, GenControlClass;

/* -----------------------------------------------------------------------------
 * 		Methods
 * -----------------------------------------------------------------------------*/

/*
 * PASS:	dx - number of names
 */
@message void MSG_DNC_NAME_OP_DONE(word numberOfNames = dx);

/*
 * PASS:	dh - non zero if adding name, 0 if changing name
 *		dl - ParserScannerEvaluatorError
 */
@message void MSG_DNC_NAME_OP_ERROR(Boolean addingName = dh,
				    ParserScannerEvaluatorError err = dl);

/* -----------------------------------------------------------------------------
 * 		Internal methods
 * -----------------------------------------------------------------------------*/

/*
 * PASS:		cx - number of names
 */
@message void MSG_DNC_UPDATE_UI_WITH_NUM_NAMES(word numberOfNames = cx);
@message void MSG_DNC_INIT_ADD_NAME();
@message void MSG_DNC_ADD_NAME();
@message void MSG_DNC_INIT_CHANGE_NAME();
@message void MSG_DNC_CHANGE_NAME();
@message void MSG_DNC_DELETE_NAME();

/*
 * PASS:	cx:dx GenDynamicList OD
 *		bp - entry #
 */
@message void MSG_DNC_REQUEST_MONIKER(optr genDynamicList = cx:dx,
				      word entryNum = bp);

/*
 * PASS:	cx - current selection
 *		dl - GenItemGroupStateFlags
 */
@message void MSG_DNC_NAME_UPDATE_DEFINITION(word currentSelection = cx,
				 	GenItemGroupStateFlags flags = dl);

/*
 * Ask the user if they really want to delete a name entry.
 *
 * PASS 	cx - mem han containing SSDNCommand structure with these
 *		    fields filled in:
 *		    SSDNC_dataBlk
 * RETURN:	SSDNC_dataBlk freed
 */
@message void MSG_DNC_QUERY_NAME_DELETE(MemHandle ssdnCommand = cx);

@message void MSG_DNC_QUERY_NAME_DELETE_DONE(InteractionCommand command = cx);

/* -----------------------------------------------------------------------------
 * 		Hints
 * -----------------------------------------------------------------------------*/

/* -----------------------------------------------------------------------------
 * 		Constants & Structures
 * -----------------------------------------------------------------------------*/

typedef ByteFlags SSDNFeatures;
/* 7 bits unused */
#define SSDNF_DEFINE_NAME	(0x01)


typedef struct {
    word	SSDNC_listEntry;
    optr	SSDNC_controllerOD;
    Message	SSDNC_msgToSendBack;
    word	SSDNC_dataBlk;
} SSDNCommand;


#define SSDN_DEFAULT_FEATURES	(SSDNF_DEFINE_NAME)

/*
 *  Notification structures used by SSDefineNameControl and SSChooseNameControl
 */
typedef struct {
    word	NSSNC_count;
} NotifySSheetNameChange;


/* -----------------------------------------------------------------------------
 * 		Instance Data
 * -----------------------------------------------------------------------------*/

    @default GCI_output = (TO_APP_TARGET);

@endc	/* SSDefineNameControlClass */

/* ******************************************************************************
 * 		SSChooseNameControlClass
 * ******************************************************************************
 * 
 *  Message(s) sent out:
 * 
 *  Notification type(s) responded to:
 */

@class  SSChooseNameControlClass, GenControlClass;

/* -----------------------------------------------------------------------------
 * 		Methods
 * -----------------------------------------------------------------------------*/

/* -----------------------------------------------------------------------------
 * 		Internal methods
 * -----------------------------------------------------------------------------*/

/*
 * PASS:	cx - index of the function in the list
 */
@message void MSG_SS_CHOOSE_NAME(word functionIndex = cx);
@message void MSG_CHOOSE_NAME_REQUEST_MONIKER(optr genDynamicList = cx:dx,
				      word entryNum = bp);
@message void MSG_CNC_UPDATE_UI_WITH_NUM_NAMES(word numberOfNames = cx);

/* -----------------------------------------------------------------------------
 * 		Hints
 * -----------------------------------------------------------------------------*/

/* -----------------------------------------------------------------------------
 * 		Constants & Structures
 * -----------------------------------------------------------------------------*/

typedef ByteFlags SSCNFeatures;
/* 7 bits unused */
#define SSCNF_CHOOSE_NAME	(0x01)

/* -----------------------------------------------------------------------------
 * 		Constants & Structures
 * -----------------------------------------------------------------------------*/



#define SSCN_DEFAULT_FEATURES	(SSCNF_CHOOSE_NAME)

/* -----------------------------------------------------------------------------
 * 		Instance Data
 * -----------------------------------------------------------------------------*/

    @default GCI_output = (TO_APP_TARGET);

@endc	/* SSChooseNameControlClass */

/* ******************************************************************************
 * 		SSColumnWidthControl
 * ******************************************************************************
 *
 *  Message(s) sent out:
 *  MSG_SPREADSHEET_CHANGE_COLUMN_WIDTHS
 *  MSG_SPREADSHEET_SET_COLUMN_WIDTH
 *
 *  Notification type(s) responded to:
 *  MANUFACTURER_ID_GEOWORKS.GWNT_SPREADSHEET_CELL_WIDTH_HEIGHT_CHANGE
 * 					NotifySSheetCellWidthHeightChange
 * 
 *  GenApplication GCN lists to be placed on:
 * 	GAGCNLT_SELF_LOAD_OPTIONS
 */

@class  SSColumnWidthControlClass, GenControlClass;

/* -----------------------------------------------------------------------------
 * 		Methods
 * -----------------------------------------------------------------------------*/

/* -----------------------------------------------------------------------------
 * 		Internal methods
 * -----------------------------------------------------------------------------*/

/*
 *  Make selected columns narrower or wider
 * 	PASS:	cx - change in column width
 */
@message void MSG_SSCWC_CHANGE_COLUMN_WIDTHS(word width = cx);


/*
 *  Set width of selected columns
 * 	PASS:	cx - column width
 */
@message void MSG_SSCWC_SET_COLUMN_WIDTH(word width = cx);

/* -----------------------------------------------------------------------------
 * 		Hints
 * -----------------------------------------------------------------------------*/

/* -----------------------------------------------------------------------------
 * 		Constants & Structures
 * -----------------------------------------------------------------------------*/

/*
 *  Features flags (used with ATTR_GEN_CONTROL_REQUIRE_UI and
 *  ATTR_GEN_CONTROL_PROHIBIT_UI)
 */

typedef ByteFlags SSCWCFeatures;
/* 4 bits unused */
#define SSCWCF_NARROWER	(0x08)
#define SSCWCF_WIDER	(0x04)
#define SSCWCF_BEST_FIT	(0x02)
#define SSCWCF_CUSTOM	(0x01)



#define SSCWC_DEFAULT_FEATURES	\
(SSCWCF_NARROWER | SSCWCF_WIDER | SSCWCF_BEST_FIT | SSCWCF_CUSTOM)

/*
 *  Notification structures
 */
typedef ByteFlags SSheetWidthHeightFlags;
/* 6 bits unused */
/* SSWHF_MULTIPLE_WIDTHS = multiple column widths */
#define SSWHF_MULTIPLE_WIDTHS	(0x02)
/* SSWHF_MULTIPLE_HEIGHTS = multiple row heights */
#define SSWHF_MULTIPLE_HEIGHTS	(0x01)


typedef struct {
    SSheetWidthHeightFlags	NSSCWHC_flags;
    word	NSSCWHC_width;	/* width of column */
    word	NSSCWHC_height;	/* height of row */
} NotifySSheetCellWidthHeightChange;

/* -----------------------------------------------------------------------------
 * 		Instance Data
 * -----------------------------------------------------------------------------*/

    @default GCI_output = (TO_APP_TARGET);

@endc	/* SSColumnWidthControlClass */


/* ******************************************************************************
 * 		SSRowHeightControl
 * ******************************************************************************
 *
 *  Message(s) sent out:
 *  MSG_SPREADSHEET_SET_ROW_HEIGHT
 * 
 *  Notification type(s) responded to:
 *  MANUFACTURER_ID_GEOWORKS.GWNT_SPREADSHEET_CELL_WIDTH_HEIGHT_CHANGE
 * 					NotifySSheetCellWidthHeightChange
 * 
 *  GenApplication GCN lists to be placed on:
 * 	GAGCNLT_SELF_LOAD_OPTIONS
 */

@class  SSRowHeightControlClass, GenControlClass;

/* -----------------------------------------------------------------------------
 * 		Methods
 * -----------------------------------------------------------------------------*/

/* -----------------------------------------------------------------------------
 * 		Internal methods
 * -----------------------------------------------------------------------------*/

/*
 *  Change in state of row height automatic flag
 */
@message void MSG_SSRHC_ROW_HEIGHT_AUTOMATIC(Boolean selectedBooleans = cx,
					Boolean indeterminateBooleans = dx);

/* -----------------------------------------------------------------------------
 * 		Hints
 * -----------------------------------------------------------------------------*/

/* -----------------------------------------------------------------------------
 * 		Constants & Structures
 * -----------------------------------------------------------------------------*/

/*
 *  Features flags (used with ATTR_GEN_CONTROL_REQUIRE_UI and
 *  ATTR_GEN_CONTROL_PROHIBIT_UI)
 */

typedef ByteFlags SSRHCFeatures;
/* 7 bits unused */
#define SSRHCF_CUSTOM	(0x01)



#define SSRHC_DEFAULT_FEATURES	(SSRHCF_CUSTOM)

/* -----------------------------------------------------------------------------
 * 		Instance Data
 * -----------------------------------------------------------------------------*/

    @default GCI_output = (TO_APP_TARGET);

@endc	/* SSRowHeightControlClass */

/* ******************************************************************************
 * 		SSEditControl
 * ******************************************************************************
 * 
 *  Message(s) sent out:
 *  MSG_SPREADSHEET_CLEAR_SELECTED
 *  MSG_SPREADSHEET_INSERT_SPACE
 *
 *  Notification type(s) responded to:
 *  MANUFACTURER_ID_GEOWORKS.GWNT_SPREADSHEET_SELECTION_CHANGE
 * 					NotifySSheetSelectionChange
 *
 *  GenApplication GCN lists to be placed on:
 * 	GAGCNLT_SELF_LOAD_OPTIONS
 */

@class  SSEditControlClass, GenControlClass;

/* -----------------------------------------------------------------------------
 * 		Methods
 * -----------------------------------------------------------------------------*/

/* -----------------------------------------------------------------------------
 * 		Internal methods
 * -----------------------------------------------------------------------------*/

/*
 *  Send out clear message to spreadsheet
 * 
 *  PASS:		none
 *  RETURN:	none
 */
@message void MSG_SSEC_CLEAR();


/*
 *  Message to insert/delete a row/column
 * 
 *  PASS:		cx - SpreadsheetInsertFlags
 *  RETURN:	none
 */
@message void MSG_SSEC_INSERT_DELETE_ROW_COLUMN(SpreadsheetInsertFlags flags = cx);


/*
 *  Handle insert from DB
 * 
 *  PASS:		none
 *  RETURN:	none
 */
@message void MSG_SSEC_DO_INSERT();


/*
 *  Handle delete from DB
 * 
 *  PASS:		none
 *  RETURN:	none
 */
@message void MSG_SSEC_DO_DELETE();

/* -----------------------------------------------------------------------------
 * 		Hints
 * -----------------------------------------------------------------------------*/

/* -----------------------------------------------------------------------------
 * 		Constants & Structures
 * -----------------------------------------------------------------------------*/

/*
 *  Features flags (used with ATTR_GEN_CONTROL_REQUIRE_UI and
 *  ATTR_GEN_CONTROL_PROHIBIT_UI)
 */

typedef ByteFlags SSECFeatures;
/* 5 bits unused */
#define SSECF_DELETE	(0x04)
#define SSECF_INSERT	(0x02)
#define SSECF_CLEAR	(0x01)



#define SSEC_DEFAULT_FEATURES	(SSECF_CLEAR | SSECF_INSERT | SSECF_DELETE)

typedef ByteFlags SSECToolboxFeatures;
/* 4 bits unused */
#define SSECTF_DELETE_COLUMN	(0x08)
#define SSECTF_DELETE_ROW	(0x04)
#define SSECTF_INSERT_COLUMN	(0x02)
#define SSECTF_INSERT_ROW	(0x01)



#define SSEC_DEFAULT_TOOLBOX_FEATURES	\
(SSECTF_INSERT_ROW | SSECTF_INSERT_COLUMN | SSECTF_DELETE_ROW | SSECTF_DELETE_COLUMN)

/* -----------------------------------------------------------------------------
 * 		Instance Data
 * -----------------------------------------------------------------------------*/

    @default GCI_output = (TO_APP_TARGET);

@endc	/* SSEditControlClass */


/* ******************************************************************************
 * 		SSHeaderFooterControl
 * ******************************************************************************
 * 
 *  Message(s) sent out:
 *  MSG_SPREADSHEET_SET_HEADER_RANGE
 *  MSG_SPREADSHEET_SET_FOOTER_RANGE
 * 
 *  Notification type(s) responded to:
 *  MANUFACTURER_ID_GEOWORKS.GWNT_SPREADSHEET_DOC_ATTRS_CHANGE
 * 					NotifySSheetDocAttrsChange
 * 
 *  GenApplication GCN lists to be placed on:
 * 	GAGCNLT_SELF_LOAD_OPTIONS
 */

@class  SSHeaderFooterControlClass, GenControlClass;

/* -----------------------------------------------------------------------------
 * 		Methods
 * -----------------------------------------------------------------------------*/

/* -----------------------------------------------------------------------------
 * 		Internal methods
 * -----------------------------------------------------------------------------*/

/*
 *  Set or remove the header or footer range
 * 	PASS:	cx - TRUE to remove header/footer
 * 		dx - MSG_SPREADSHEET_SET_{HEADER,FOOTER}
 */
@message void MSG_SSHFC_SET_HEADER_FOOTER(word remove = cx,
					  message msg = dx);

/* -----------------------------------------------------------------------------
 * 		Hints
 * -----------------------------------------------------------------------------*/

/* -----------------------------------------------------------------------------
 * 		Constants & Structures
 * -----------------------------------------------------------------------------*/

/*
 *  Features flags (used with ATTR_GEN_CONTROL_REQUIRE_UI and
 *  ATTR_GEN_CONTROL_PROHIBIT_UI)
 */

typedef ByteFlags SSHFCFeatures;
/* 4 bits unused */
#define SSHFCF_SET_HEADER	(0x08)
#define SSHFCF_SET_FOOTER	(0x04)
#define SSHFCF_CLEAR_HEADER	(0x02)
#define SSHFCF_CLEAR_FOOTER	(0x01)



#define SSHFC_DEFAULT_FEATURES	\
(SSHFCF_SET_HEADER | SSHFCF_SET_FOOTER | SSHFCF_CLEAR_HEADER | SSHFCF_CLEAR_FOOTER)


typedef struct {
    SpreadsheetDrawFlags	NSSDAC_drawFlags;
    CellRange			NSSDAC_header;
    CellRange			NSSDAC_footer;
    sword   			NSSDAC_circCount;	/* # of trips */
    FloatNum			NSSDAC_converge;	/* minimum difference */
    SpreadsheetFlags		NSSDAC_calcFlags;	/* calculation flags */
} NotifySSheetDocAttrsChange;

/* -----------------------------------------------------------------------------
 * 		Instance Data
 * -----------------------------------------------------------------------------*/

    @default GCI_output = (TO_APP_TARGET);

@endc	/* SSHeaderFooterControlClass */

/* ******************************************************************************
 * 		SSBorderControl
 * ******************************************************************************
 * 
 *  Message(s) sent out:
 *  MSG_SPREADSHEET_SET_BORDERS
 * 
 *  Notification type(s) responded to:
 *  MANUFACTURER_ID_GEOWORKS.GWNT_SPREADSHEET_CELL_ATTRS_CHANGE
 * 					NotifySSheetCellAttrsChange
 * 
 *  GenApplication GCN lists to be placed on:
 * 	GAGCNLT_SELF_LOAD_OPTIONS
 */

@class  SSBorderControlClass, GenControlClass;

/* -----------------------------------------------------------------------------
 * 		Methods
 * -----------------------------------------------------------------------------*/

/* -----------------------------------------------------------------------------
 * 		Internal methods
 * -----------------------------------------------------------------------------*/

/*
 *  "outline" was selected
 */
@message void MSG_SSBC_SET_OUTLINE(CellBorderInfo cbi = cl);
/*
 *  "left","top","right" or "bottom" was selected
 */
@message void MSG_SSBC_SET_SIDES(CellBorderInfo cbi = cl);

/* -----------------------------------------------------------------------------
 * 		Hints
 * -----------------------------------------------------------------------------*/

/* -----------------------------------------------------------------------------
 * 		Constants & Structures
 * -----------------------------------------------------------------------------*/

/*
 *  Features flags (used with ATTR_GEN_CONTROL_REQUIRE_UI and
 *  ATTR_GEN_CONTROL_PROHIBIT_UI)
 */

typedef ByteFlags SSBCFeatures;
/* 7 bits unused */
#define SSBCF_SIDES	(0x01)



#define SSBC_DEFAULT_FEATURES	(SSBCF_SIDES)


typedef WordFlags SpreadsheetCellFlags;
/* 9 bits unused */
/* SCF_FORMATS = multiple numeric formats */
#define SCF_FORMATS		(0x0040)
/* SCF_JUSTIFICATIONS = multiple justifications */
#define SCF_JUSTIFICATIONS	(0x0020)
/* SCF_ROWS = multiple row heights */
#define SCF_ROWS		(0x0010)
/* SCF_COLUMNS = multiple column widths */
#define SCF_COLUMNS		(0x0008)
/* SCF_BORDER_PATTERNS = multiple border patterns */
#define SCF_BORDER_PATTERNS	(0x0004)
/* SCF_BORDER_GRAY_SCREENS = multiple border gray screens */
#define SCF_BORDER_GRAY_SCREENS	(0x0002)
/* SCF_BORDER_COLORS = multiple border colors */
#define SCF_BORDER_COLORS	(0x0001)


typedef struct {
    CellBorderInfo		NSSCAC_borderInfo;
    ColorQuad			NSSCAC_borderColor;
    SystemDrawMask		NSSCAC_borderGrayScreen;
    GraphicPattern		NSSCAC_borderPattern;
    CellBorderInfo		NSSCAC_borderIndeterminates;
    SpreadsheetCellFlags	NSSCAC_borderColorIndeterminates;
} NotifySSheetCellAttrsChange;

/* -----------------------------------------------------------------------------
 * 		Instance Data
 * -----------------------------------------------------------------------------*/

    @instance CellBorderInfo SSBCI_status = 0;	/* current list status */
    @default GCI_output = (TO_APP_TARGET);

@endc	/* SSBorderControlClass */


/* ******************************************************************************
 * 		SSBorderColorControl
 * ******************************************************************************
 *
 *  Message(s) sent out:
 *  MSG_SPREADSHEET_SET_BORDER_COLOR
 *
 *  Notification type(s) responded to:
 *  MANUFACTURER_ID_GEOWORKS.GWNT_SPREADSHEET_CELL_ATTRS_CHANGE
 * 					NotifySSheetCellAttrsChange
 *
 *  GenApplication GCN lists to be placed on:
 * 	GAGCNLT_SELF_LOAD_OPTIONS
 */

@class  SSBorderColorControlClass, ColorSelectorClass;

/* -----------------------------------------------------------------------------
 * 		Methods
 * -----------------------------------------------------------------------------*/

/* -----------------------------------------------------------------------------
 * 		Internal methods
 * -----------------------------------------------------------------------------*/

/* -----------------------------------------------------------------------------
 * 		Hints
 * -----------------------------------------------------------------------------*/

/* -----------------------------------------------------------------------------
 * 		Constants & Structures
 * -----------------------------------------------------------------------------*/



#define SSBCC_DEFAULT_FEATURES	\
(CSF_INDEX | CSF_RGB | CSF_DRAW_MASK | CSF_PATTERN)

/* -----------------------------------------------------------------------------
 * 		Instance Data
 * -----------------------------------------------------------------------------*/

    @default GCI_output = (TO_APP_TARGET);

@endc	/* SSBorderColorControlClass */


/* ******************************************************************************
 * 		SSRecalcControl
 * ******************************************************************************
 * 
 *  Message(s) sent out:
 *  MSG_SPREADSHEET_CHANGE_RECALC_PARAMS
 * 
 *  Notification type(s) responded to:
 *  MANUFACTURER_ID_GEOWORKS.GWNT_SPREADSHEET_DOC_ATTRS_CHANGE
 * 					NotifySSheetDocAttrsChange
 * 
 *  GenApplication GCN lists to be placed on:
 * 	GAGCNLT_SELF_LOAD_OPTIONS
 * 
 *  NOTE: This controller needs a floating point stack.  As the spreadsheet
 *  library explicitly uses the Math library, which automatically creates
 *  a stack for any threads in the app, this should not be a concern.
 */

@class  SSRecalcControlClass, GenControlClass;

/* -----------------------------------------------------------------------------
 * 		Methods
 * -----------------------------------------------------------------------------*/

/* -----------------------------------------------------------------------------
 * 		Internal methods
 * -----------------------------------------------------------------------------*/

/*
 *  Recalculate now
 */
@message void MSG_SSRC_RECALC_NOW();
/*
 *  Set recalc params from DB
 */
@message void MSG_SSRC_SET_RECALC();
/*
 *  Turn iteration on/off
 */
@message void MSG_SSRC_ITERATE_ON_OFF(SpreadsheetFlags currentSelection = cx);

/* -----------------------------------------------------------------------------
 * 		Hints
 * -----------------------------------------------------------------------------*/

/* -----------------------------------------------------------------------------
 * 		Constants & Structures
 * -----------------------------------------------------------------------------*/

/*
 *  Features flags (used with ATTR_GEN_CONTROL_REQUIRE_UI and
 *  ATTR_GEN_CONTROL_PROHIBIT_UI)
 */

typedef ByteFlags SSRCFeatures;
/* 6 bits unused */
#define SSRCF_CONVERGE_DB	(0x02)
#define SSRCF_RECALC_NOW	(0x01)



#define SSRC_DEFAULT_FEATURES	(SSRCF_RECALC_NOW | SSRCF_CONVERGE_DB)


typedef ByteFlags SSRCToolboxFeatures;
/* 7 bits unused */
#define SSRCTF_RECALC_NOW	(0x01)



#define SSRC_DEFAULT_TOOLBOX_FEATURES	(SSRCTF_RECALC_NOW)

/* -----------------------------------------------------------------------------
 * 		Instance Data
 * -----------------------------------------------------------------------------*/

    @default GCI_output = (TO_APP_TARGET);

@endc	/* SSRecalcControlClass */

/* ******************************************************************************
 * 		SSOptionsControl
 * ******************************************************************************
 * 
 *  Message(s) sent out:
 *  MSG_SPREADSHEET_ALTER_DRAW_FLAGS
 * 
 *  Notification type(s) responded to:
 *  MANUFACTURER_ID_GEOWORKS.GWNT_SPREADSHEET_DOC_ATTRS_CHANGE
 * 					NotifySSheetDocAttrsChange
 * 
 *  GenApplication GCN lists to be placed on:
 * 	GAGCNLT_SELF_LOAD_OPTIONS
 */

@class  SSOptionsControlClass, GenControlClass;

/* -----------------------------------------------------------------------------
 * 		Methods
 * -----------------------------------------------------------------------------*/

/* -----------------------------------------------------------------------------
 * 		Internal methods
 * -----------------------------------------------------------------------------*/

/*
 *  Set options from list
 * 	PASS:	cx - SpreadsheetDrawFlags
 */
@message void MSG_SSOC_SET_OPTIONS(SpreadsheetDrawFlags flags = cx);

/* -----------------------------------------------------------------------------
 * 		Hints
 * -----------------------------------------------------------------------------*/

/* -----------------------------------------------------------------------------
 * 		Constants & Structures
 * -----------------------------------------------------------------------------*/

/*
 *  Features flags (used with ATTR_GEN_CONTROL_REQUIRE_UI and
 *  ATTR_GEN_CONTROL_PROHIBIT_UI)
 */

typedef ByteFlags SSOCFeatures;
/* 4 bits unused */
#define SSOCF_SHOW_FORMULAS		(0x08)
#define SSOCF_DRAW_HEADER_FOOTER_BUTTON	(0x04)
#define SSOCF_DRAW_NOTE_BUTTON		(0x02)
#define SSOCF_DRAW_GRID			(0x01)



#define SSOC_DEFAULT_FEATURES	\
(SSOCF_DRAW_GRID | SSOCF_DRAW_NOTE_BUTTON | SSOCF_DRAW_HEADER_FOOTER_BUTTON | SSOCF_SHOW_FORMULAS)

/* -----------------------------------------------------------------------------
 * 		Instance Data
 * -----------------------------------------------------------------------------*/

    @default GCI_output = (TO_APP_TARGET);

@endc	/* SSOptionsControlClass */

/* ******************************************************************************
 * 		SSNoteControl
 * ******************************************************************************
 * 
 *  Message(s) sent out:
 *  MSG_SPREADSHEET_SET_NOTE_FOR_ACTIVE_CELL
 * 
 *  Notification type(s) responded to:
 *  MANUFACTURER_ID_GEOWORKS.GWNT_SPREADSHEET_CELL_NOTES_CHANGE
 * 
 *  GenApplication GCN lists to be placed on:
 * 	GAGCNLT_SELF_LOAD_OPTIONS
 */

@class  SSNoteControlClass, GenControlClass;

/* -----------------------------------------------------------------------------
 * 		Methods
 * -----------------------------------------------------------------------------*/

/* -----------------------------------------------------------------------------
 * 		Internal methods
 * -----------------------------------------------------------------------------*/

/*
 *  Set notes...
 */
@message void MSG_SSNC_SET_NOTES();

/* -----------------------------------------------------------------------------
 * 		Hints
 * -----------------------------------------------------------------------------*/

/* -----------------------------------------------------------------------------
 * 		Constants & Structures
 * -----------------------------------------------------------------------------*/

/*
 *  Maximum length that a note can be. There is no real benefit to setting this
 *  to a low value except to restrict and annoy the user.
 */
#define MAX_NOTE_LENGTH	(512)

/*
 *  Features flags (used with ATTR_GEN_CONTROL_REQUIRE_UI and
 *  ATTR_GEN_CONTROL_PROHIBIT_UI)
 */

typedef ByteFlags SSNCFeatures;
/* 7 bits unused */
#define SSNCF_NOTES	(0x01)



#define SSNC_DEFAULT_FEATURES	(SSNCF_NOTES)

/* -----------------------------------------------------------------------------
 * 		Instance Data
 * -----------------------------------------------------------------------------*/

    @default GCI_output = (TO_APP_TARGET);

@endc	/* SSNoteControlClass */


/* ******************************************************************************
 * 		SSFillControl
 * ******************************************************************************
 * 
 *  Message(s) sent out:
 *  MSG_SPREADSHEET_FILL_SERIES
 *  MSG_SPREADSHEET_FILL_RANGE
 * 
 *  Notification type(s) responded to:
 *  MANUFACTURER_ID_GEOWORKS.GWNT_SPREADSHEET_SELECTION_CHANGE
 * 					NotifySSheetSelectionChange
 * 
 *  GenApplication GCN lists to be placed on:
 * 	GAGCNLT_SELF_LOAD_OPTIONS
 *
 *  NOTE: This controller needs a floating point stack.  As the spreadsheet
 *  library explicitly uses the Math library, which automatically creates
 *  a stack for any threads in the app, this should not be a concern.
 */

@class  SSFillControlClass, GenControlClass;

/* -----------------------------------------------------------------------------
 * 		Methods
 * -----------------------------------------------------------------------------*/

/* -----------------------------------------------------------------------------
 * 		Internal methods
 * -----------------------------------------------------------------------------*/


/*
 *  Fill series to right or down, no step
 * 
 * 	PASS:	cl - SpreadsheetSeriesFillFlags
 */
@message void MSG_SSFC_DO_FILL(SpreadsheetSeriesFillFlags flags = cl);


/*
 *  Fill series, with step size
 */
@message void MSG_SSFC_DO_SERIES();


/*
 *  Set units for series fill
 * 
 * 	PASS:	cx - SpreadsheetSeriesFillType
 */
@message void MSG_SSFC_SET_UNITS(SpreadsheetSeriesFillType fillType = cx);

/* -----------------------------------------------------------------------------
 * 		Hints
 * -----------------------------------------------------------------------------*/

/* -----------------------------------------------------------------------------
 * 		Constants & Structures
 * -----------------------------------------------------------------------------*/

/*
 *  Features flags (used with ATTR_GEN_CONTROL_REQUIRE_UI and
 *  ATTR_GEN_CONTROL_PROHIBIT_UI)
 */

typedef ByteFlags SSFCFeatures;
/* 5 bits unused */
#define SSFCF_FILL_RIGHT 	(0x04)
#define SSFCF_FILL_DOWN  	(0x02)
#define SSFCF_FILL_SERIES	(0x01)



#define SSFC_DEFAULT_FEATURES	\
(SSFCF_FILL_RIGHT | SSFCF_FILL_DOWN | SSFCF_FILL_SERIES)

/* -----------------------------------------------------------------------------
 * 		Instance Data
 * -----------------------------------------------------------------------------*/

    @default GCI_output = (TO_APP_TARGET);

@endc	/* SSFillControlClass */

/* ******************************************************************************
 * 		SSChartControl
 * ******************************************************************************
 * 
 *  Message(s) sent out:
 *  MSG_SPREADSHEET_CHART_RANGE
 * 
 *  Notification type(s) responded to:
 *  MANUFACTURER_ID_GEOWORKS.GWNT_SPREADSHEET_SELECTION_CHANGE
 * 					NotifySSheetSelectionChange
 * 
 *  GenApplication GCN lists to be placed on:
 * 	GAGCNLT_SELF_LOAD_OPTIONS
 */
@class  SSChartControlClass, GenControlClass;

/* -----------------------------------------------------------------------------
 * 		Methods
 * -----------------------------------------------------------------------------*/

/* -----------------------------------------------------------------------------
 * 		Internal methods
 * -----------------------------------------------------------------------------*/

/*
 *  Send a chart message off the the spreadsheet
 */
@message void MSG_SSCC_CHART(ChartType type = cl, 
				ChartVariation variation = ch);

/* -----------------------------------------------------------------------------
 * 		Hints
 * -----------------------------------------------------------------------------*/

/* -----------------------------------------------------------------------------
 * 		Constants & Structures
 * -----------------------------------------------------------------------------*/

/*
 *  Features flags (used with ATTR_GEN_CONTROL_REQUIRE_UI and
 *  ATTR_GEN_CONTROL_PROHIBIT_UI)
 */

#ifdef	SPIDER_CHART

typedef ByteFlags SSCCFeatures;
#define SSCCF_SPIDER	(0x80)
#define SSCCF_HIGH_LOW	(0x40)
#define SSCCF_PIE	(0x20)
#define SSCCF_SCATTER	(0x10)
#define SSCCF_AREA	(0x08)
#define SSCCF_LINE	(0x04)
#define SSCCF_BAR	(0x02)
#define SSCCF_COLUMN	(0x01)

#define SSCC_DEFAULT_FEATURES	\
(SSCCF_COLUMN | SSCCF_BAR | SSCCF_LINE | SSCCF_AREA | SSCCF_SCATTER | SSCCF_PIE | SSCCF_HIGH_LOW | SSCCF_SPIDER)

typedef ByteFlags SSCCToolboxFeatures;
#define SSCCTF_SPIDER	(0x80)
#define SSCCTF_HIGH_LOW	(0x40)
#define SSCCTF_PIE	(0x20)
#define SSCCTF_SCATTER	(0x10)
#define SSCCTF_AREA	(0x08)
#define SSCCTF_LINE	(0x04)
#define SSCCTF_BAR	(0x02)
#define SSCCTF_COLUMN	(0x01)

#define SSCC_DEFAULT_TOOLBOX_FEATURES	\
(SSCCTF_COLUMN | SSCCTF_BAR | SSCCTF_LINE | SSCCTF_AREA | SSCCTF_SCATTER | SSCCTF_PIE | SSCCTF_HIGH_LOW | SSCCTF_SPIDER)

#else

typedef ByteFlags SSCCFeatures;
/* 1 bit unused */
#define SSCCF_HIGH_LOW	(0x40)
#define SSCCF_PIE	(0x20)
#define SSCCF_SCATTER	(0x10)
#define SSCCF_AREA	(0x08)
#define SSCCF_LINE	(0x04)
#define SSCCF_BAR	(0x02)
#define SSCCF_COLUMN	(0x01)

#define SSCC_DEFAULT_FEATURES	\
(SSCCF_COLUMN | SSCCF_BAR | SSCCF_LINE | SSCCF_AREA | SSCCF_SCATTER | SSCCF_PIE | SSCCF_HIGH_LOW)

typedef ByteFlags SSCCToolboxFeatures;
/* 1 bit unused */
#define SSCCTF_HIGH_LOW	(0x40)
#define SSCCTF_PIE	(0x20)
#define SSCCTF_SCATTER	(0x10)
#define SSCCTF_AREA	(0x08)
#define SSCCTF_LINE	(0x04)
#define SSCCTF_BAR	(0x02)
#define SSCCTF_COLUMN	(0x01)

#define SSCC_DEFAULT_TOOLBOX_FEATURES	\
(SSCCTF_COLUMN | SSCCTF_BAR | SSCCTF_LINE | SSCCTF_AREA | SSCCTF_SCATTER | SSCCTF_PIE | SSCCTF_HIGH_LOW)

#endif
/* -----------------------------------------------------------------------------
 * 		Instance Data
 * -----------------------------------------------------------------------------*/

    @default GCI_output = (TO_APP_TARGET);

@endc	/* SSChartControlClass */

@endlib

#endif
